#!/usr/bin/perl
use strict;

# Setup.
my $tsu_app = '/var/www/wd/current';
my $tsu_db  = 'sni_wd_app_production';
my $tmp_sql = '/tmp/wd.sql';
my $loc_app = '/Users/mjo/Projects/sni_wd_app';
my $loc_db  = 'sni_wd_app_development';
my $ssh_usr = 'sanichi@tsukuba.markorr.net';

# Sanity check.
&check(-d $loc_app, "directory $loc_app does not exist");

# Generate data on server.
&run("ssh $ssh_usr 'pg_dump $tsu_db --no-owner --no-privileges --clean --file $tmp_sql'", "couldn't export DB on server");

# Remove old local data.
&run("rm -f $tmp_sql", "couldn't remove $tmp_sql") if -f $tmp_sql;

# Copy new data from server.
&run("scp $ssh_usr:$tmp_sql $tmp_sql", "couldn't copy SQL export from server");

# Does this all look good so far?
my $ans = &ask('Proceed with sync [yN]', qr/^(Y(es)?|No?|)$/i);
exit unless $ans =~ /^Y(es)?/i;

# Install data locally.
&run("psql -q $loc_db < $tmp_sql", "couldn't import SQL to development DB");

#
# Utilities.
#

sub check { die "$_[1]\n", unless $_[0] }

sub run { printf "$_[0]\n"; &check(!system($_[0]), $_[1]) }

sub ask
{
  my ($question, $allowed) = @_;

  my $answer;
  while (!defined($answer) || $answer !~ $allowed)
  {
    printf '%s?: ', $question;
    $answer = <STDIN>;
    $answer =~ s/^\s+//;
    $answer =~ s/\s+$//;
  }

  $answer;
}
